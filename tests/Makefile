#
# 
# SYNOPSIS:
#
#   make [all]  - makes everything.
#   make TARGET - makes the given target.
#   make clean  - removes all files generated by make.

# Please tweak the following variable definitions as needed by your
# project, except GTEST_HEADERS, which you can use in your own targets
# but shouldn't modify.

# Points to the root of Google Test, relative to where this file is.
# Remember to tweak this if you move this file.
EXTERNAL_DIR = ../external
GTEST_DIR = $(EXTERNAL_DIR)/gtest-1.6.0

# Where to find user code.

C_SRC_DIR = ..
TEST_DIR = .
# INSTALL_BASE = $(EXTERNAL_DIR)/ccnx-0.8.0
# XXX We should remove this boost stuff, don't use it
# BOOST_INCLUDE = $(INSTALL_BASE)/include/boost
# BOOST_LIBS = $(INSTALL_BASE)/lib/libboost_regex.a $(INSTALL_BASE)/lib/libboost_thread.a
ADD_INCLUDE = $(EXTERNAL_DIR)/cJSON
ADD_LIBS = -lm -L$(EXTERNAL_DIR)/cJSON -lcjson

#
# XXX We should remove this CXX stuff, we don't use it
#
CXX_INCLUDE_FLAGS = -I$(INSTALL_BASE)/include -I$(BOOST_INCLUDE) -I$(CXX_SRC_DIR)
CXX_LDLIBS = -lccn -lccnsync -lcrypto -lpthread $(BOOST_LIBS)

C_INCLUDE_FLAGS = -I$(INSTALL_BASE)/include -I$(C_SRC_DIR) -I$(ADD_INCLUDE)
C_LDLIBS = -L$(INSTALL_BASE)/lib -lccn -lccnsync -lcrypto -lpthread $(ADD_LIBS)

# Flags passed to the preprocessor.
CPPFLAGS += -I$(GTEST_DIR)/include

# Flags passed to the C++ compiler.
CXXFLAGS += -g -Wall -Wextra
CFLAGS += -g -Wall -Wextra

# All tests produced by this Makefile.  Remember to add new tests you
# created to the list.
TESTS = ldp_c_units

# All Google Test headers.  Usually you shouldn't change this
# definition.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# House-keeping build targets.

all : $(TESTS)

# Add: --gtest_break_on_failure to runall iterations to break on fail
runall : $(TESTS)
	for i in $(TESTS); do \
		(./"$$i" --gtest_output=xml:"$$i"_test_detail.xml) \
	done

clean :
	rm -f $(TESTS) gtest.a gtest_main.a *.o *.xml

# Builds gtest.a and gtest_main.a.

# Usually you shouldn't tweak such internal variables, indicated by a
# trailing _.
GTEST_SRCS_ = $(GTEST_DIR)/src/*.cc $(GTEST_DIR)/src/*.h $(GTEST_HEADERS)

# For simplicity and to avoid depending on Google Test's
# implementation details, the dependencies specified below are
# conservative and not optimized.  This is fine as Google Test
# compiles fast and for ordinary users its source rarely changes.
gtest-all.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc

gtest_main.o : $(GTEST_SRCS_)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc

gtest.a : gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

gtest_main.a : gtest-all.o gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

#
# Add units here
#

$(C_SRC_DIR)/ldp.o:
	(cd $(C_SRC_DIR) && make) || exit 1;

ldp_c_units.o : $(TEST_DIR)/ldp_c_units.cpp \
                     $(C_SRC_DIR)/ldp.h $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(C_INCLUDE_FLAGS) $(CFLAGS) -c $(TEST_DIR)/ldp_c_units.cpp

ldp_c_units: $(C_SRC_DIR)/ldp.o ldp_c_units.o gtest_main.a
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) $^ -o $@ $(C_LDLIBS)